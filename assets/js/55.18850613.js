(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{465:function(e,t,r){"use strict";r.r(t);var s=r(2),v=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"观察者模式的定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式的定义"}},[e._v("#")]),e._v(" 观察者模式的定义")]),e._v(" "),t("p",[e._v("大概2种主流的定义与解释:")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("观察者模式定义了一种一对多的依赖关系，让多个观察者对象同时监听某一个目标对象，当这个目标对象的状态发生变化时，会通知所有观察者对象，使它们能够自动更新。")])]),e._v(" "),t("li",[t("p",[e._v("观察者模式指的是一个对象（Subject）维持一系列依赖于它的对象（Observer），当有关状态发生变更时 Subject 对象则通知一系列 Observer 对象进行更新。")]),e._v(" "),t("p",[e._v("在观察者模式中，Subject 对象拥有添加、删除和通知一系列 Observer 的方法等等，而 Observer 对象拥有更新方法等等。")]),e._v(" "),t("p",[e._v("在 Subject 对象添加了一系列 Observer 对象之后，Subject 对象则维持着这一系列 Observer 对象，当有关状态发生变更时 Subject 对象则会通知这一系列 Observer 对象进行更新")])])]),e._v(" "),t("h2",{attrs:{id:"发布-订阅和观察者的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布-订阅和观察者的区别"}},[e._v("#")]),e._v(" 发布-订阅和观察者的区别")]),e._v(" "),t("p",[e._v("观察者模式与发布订阅模式都是定义了一个一对多的依赖关系，当有关状态发生变更时则执行相应的更新。")]),e._v(" "),t("p",[t("strong",[e._v("不同的是")]),e._v("，在观察者模式中依赖于 Subject 对象的一系列 Observer 对象在被通知之后只能执行同一个特定的更新方法，而在发布订阅模式中则可以基于不同的主题去执行不同的自定义事件。相对而言，发布订阅模式比观察者模式要更加灵活多变。")]),e._v(" "),t("p",[e._v("我认为，观察者模式和发布订阅模式本质上的思想是一样的，而发布订阅模式可以被看作是观察者模式的一个进阶版。")])])}),[],!1,null,null,null);t.default=v.exports}}]);